function qiba_generate(obj)
%qiba_generate  Generates HTML QIBA report
%
%   qiba_generate(OBJ) this private method of QT_REPORT is undocumented and will
%   likely be removed in a future release.

    % Create a new FILE_IO object for writing the data.
    fObj = file_io( strrep(obj.genFile.file,'.m','.html') );

    % Determine the output location
    [outDir,outFile] = fileparts(obj.reportFile);
    imgDir           = fullfile(outDir,'images');
    if (exist(outDir,'dir')~=7)
        mkdir(outDir)
    end
    if (exist(imgDir,'dir')~=7)
        mkdir(imgDir)
    end

    % Write the preamble
    write_preamble(obj,fObj);

    % Write the contents
    fObj.write('  </style></head><body><div class="content"><h1>%s</h1><!--introduction--><!--/introduction--><h2>Contents</h2><div><ul>',obj.title);
    for sIdx = 1:numel(obj.sectNames)
        fObj.write('<li><a href="#%d">%s</a></li>',sIdx,obj.sectNames{sIdx});
    end
    fObj.write('%s\n','</ul></div>');

    % Loop through each of the sections and associated parts, writing the
    % section title and code
    origSect = obj.sectIdx; %store in case the user isn't done
    for sIdx = 1:numel(obj.sectNames)

        % Update the "sectIdx" property so the object references the correct
        % section and write the section title
        obj.sectIdx = sIdx;
        fObj.write('<h2>%s<a name="%d"></a></h2>\n',obj.sectNames{sIdx},sIdx);

        % Write the code and visualizations
        for pIdx = 1:(obj.nextPartIdx-1)

            % Determine what kind of report type contains the next index
            codeMask  = (obj.codeInds==pIdx);
            plotMask  = (obj.plotInds==pIdx);
            tableMask = (obj.tableInds==pIdx);
            if any(codeMask)
                cOut = obj.code{sIdx}(codeMask).part2code;
            elseif any(plotMask)

                % Initialize some necessary information for writting the image
                pObj     = obj.plots{sIdx}(plotMask);
                imRes    = sprintf('-r%d',pObj.imageRes);
                imFrmt   = pObj.imageFormat;
                origName = sprintf('Figure_%d-%d.%s',sIdx,pIdx,imFrmt);
                imgFile  = fullfile('images',[outFile '_' origName]);

                % Since this code was originally intended to work in combination
                % with MATLAB's publish function, the comments must be removed,
                % and the <html> tags changed
                cOut = obj.plots{sIdx}(plotMask).part2code;
                cOut = cellfun(@(x) strrep(x,origName,imgFile),cOut,'UniformOutput',false);

                % This private method *will* be HTML. Write the image data
                hPlotFig = pObj.preview;
                plotFile = fullfile(outDir,imgFile);
                %FIXME: For the x/y-axes to show the origin (0,0). There should
                %be a property in the qt_rptplot class...
                x = xlim; y = ylim;
                if (y(1)>=0)
                    xlim([0 x(2)]); ylim([0 y(2)]);
                end
                drawnow;
                print(hPlotFig,plotFile,['-d' imFrmt],imRes);
                delete(hPlotFig);

            elseif any(tableMask)
                cOut = obj.tables{sIdx}(tableMask).part2code;
            end

            % Since this code was originally intended to work in combination
            % with MATLAB's publish function, the comments must be removed, and
            % the <html> tags changed. This is handled by the general processing
            % in the following code.

            % General processing common to all report object types
            cOut = cellfun(@(x) strrep(x,'%',''),cOut,'UniformOutput',false);
            cOut = cellfun(@(x) strrep(x,'<html>','<p>'),cOut,'UniformOutput',false);
            cOut = cellfun(@(x) strrep(x,'</html>','</p>'),cOut,'UniformOutput',false);
            cOut = cOut(~cellfun(@isempty,cOut));

            % Write the output
            fObj.write('%s\n',cOut{:});

        end

    end

    % Restore the original section index
    obj.sectIdx = origSect;

    % Write the closing code
%     obj.genFile.write('%s','--></body></html>');

    % Close the file
    fObj.close;

end %qiba_generate


%---------------------------
function write_preamble(obj,fObj)

    c = {'<!DOCTYPE html\n',...
         '  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">',...
         '<html><head>',...
         '      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">',...
         '   <!--',...
         'This HTML was auto-generated from MATLAB code.',...
         'To make changes, update the MATLAB code and republish this document.',...
         sprintf('      --><title>%s</title><meta name="generator" content="MATLAB 7.13"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2015-08-29"><meta name="DC.source" content="a.m"><style type="text/css">',obj.title),...
         '',...
         'body {',...
         '  background-color: white;',...
         '  margin:10px;',...
         '}',...
         '',...
         'h1 {',...
         '  color: #990000; ',...
         '  font-size: x-large;',...
         '}',...
         '',...
         'h2 {',...
         '  color: #990000;',...
         '  font-size: medium;',...
         '}',...
         '',...
         '/* Make the text shrink to fit narrow windows, but not stretch too far in ',...
         'wide windows. */ ',...
         'p,h1,h2,div.content div {',...
         '  max-width: 600px;',...
         '  /* Hack for IE6 */',...
         '  width: auto !important; width: 600px;',...
         '}',...
         '',...
         'pre.codeinput {',...
         '  background: #EEEEEE;',...
         '  padding: 10px;',...
         '}',...
         '@media print {',...
         '  pre.codeinput {word-wrap:break-word; width:100%;}',...
         '}',...
         '',...
         'span.keyword {color: #0000FF}',...
         'span.comment {color: #228B22}',...
         'span.string {color: #A020F0}',...
         'span.untermstring {color: #B20000}',...
         'span.syscmd {color: #B28C00}',...
         '',...
         'pre.codeoutput {',...
         '  color: #666666;',...
         '  padding: 10px;',...
         '}',...
         '',...
         'pre.error {',...
         '  color: red;',...
         '}',...
         '',...
         'p.footer {',...
         '  text-align: right;',...
         '  font-size: xx-small;',...
         '  font-weight: lighter;',...
         '  font-style: italic;',...
         '  color: gray;',...
         '}'};
    s = sprintf('%s\n',c{:});

    % Write the file
    fObj.write('%s\n',s);

end