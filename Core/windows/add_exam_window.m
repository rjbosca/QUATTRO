function varargout = add_exam_window(varargin)
%add_exam_window  Creates a figure for adding exams to QUATTRO
%
%   [METHOD,NAME,EXAMTYPE] = add_exam_window provides a modal GUI that allows
%   the user to input a name for the exam to be added (NAME), select a method of
%   adding the exam (METHOD), and specify the type of exam data (EXAMTYPE). If
%   the window is closed or the cancel button is pressed, empty values are
%   returned.
%
%   These four outputs are intended to be the four inputs for the qt_exam method
%   "addexam"
%
%   See also QUATTRO and addexam

    % Enforce singleton functionality
    close(findall(0,'Name','Add Exam'));

    % Color set up
    bkg = [93 93 93]/255;

    % Prepare add exam figure
    aeFig = figure('CloseRequestFcn',@(h,ed) delete(h),...
                   'Color',bkg,...
                   'IntegerHandle','off',...
                   'MenuBar','None',...
                   'Name','Add Exam',...
                   'NumberTitle','off',...
                   'Position',[644 454 200 170],...
                   'Tag','figure_main',...
                   'Units','Pixels',...
                   'WindowStyle','Modal');
    set(aeFig,'defaultuicontrolbackgroundcolor',     [1 1 1],...
               'defaultuicontrolfontsize',            9,...
               'defaultuicontrolforegroundcolor',    [1 1 1],...
               'defaultuicontrolhorizontalalignment','Left',...
               'defaultuicontrolstyle',              'Text',...
               'defaultuicontrolunits',              'Pixels',...
               'defaultuipanelbackgroundcolor',       bkg,...
               'defaultuipanelbordertype',           'EtchedIn',...
               'defaultuipanelunits',                'Pixels',...
               'defaultaxescolor',                    bkg,...
               'defaultaxesunits',                   'Pixels');
    add_logo(aeFig);

    % Prepare other tools
    uicontrol('Parent',aeFig,...
              'ForegroundColor',[0 0 0],...
              'Position',[10 120 150 22],...
              'Style','Edit',...
              'Tag','edit_exam_name');
    uicontrol('Parent',aeFig,...
              'ForegroundColor',[0 0 0],...
              'Position',[10 70 100 21],...
              'String',{'Import DICOM','Import Analyze','Load Q-Save'},...
              'Style','PopupMenu',...
              'Tag','popupmenu_examType');
    uicontrol('Parent',aeFig,...
              'ForegroundColor',[0 0 0],...
              'Position',[120 70 70 21],...
              'String',{'Auto','Generic','DCE','DSC','DW','eDWI','DTI',...
                        'Multi-Flip','Multi-TE','Multi-TI','Multi-TR'},...
              'Style','PopupMenu',...
              'Tag','popupmenu_load_method');
    uicontrol('Parent',aeFig,...
              'BackgroundColor',1.2*bkg,...
              'Callback',@(h,ed) accept(h,ed),...
              'Position',[10 20 75 23],...
              'String','Accept',...
              'Style','PushButton',...
              'Tag','pushbutton_accept');
    uicontrol('Parent',aeFig,...
              'BackgroundColor',1.2*bkg,...
              'Callback',@(h,ed) delete(aeFig),...
              'Position',[98 20 75 23],...
              'String','Cancel',...
              'Style','PushButton',...
              'Tag','pushbutton_cancel');

    % Prepare text
    uicontrol('Parent',aeFig,...
              'BackgroundColor',bkg,...
              'Position',[10 93 52 15],...
              'String','Method:',...
              'Tag','text_method');
    uicontrol('Parent',aeFig,...
              'BackgroundColor',bkg,...
              'Position',[10 143 100 15],...
              'String','Exam Name:',...
              'Tag','text_exam_name');
    uicontrol('Parent',aeFig,...
              'BackgroundColor',bkg,...
              'Position',[120 93 100 15],...
              'String','Exam Type:',...
              'Tag','text_examType');

    % Wait for user input
    uiwait(aeFig);

    % Store output and delete
    if ishandle(aeFig)
        hAcpt = findobj(aeFig,'Tag','pushbutton_accept');
        if ishandle(hAcpt)
            varargout = getappdata(hAcpt,'output');
        end
        delete(aeFig);
    else %user cancelled/deleted figure
        [varargout{1:nargout}] = deal([]);
    end

end


%-------------------------Callback Functions------------------------------------

function accept(h,eventdata) %#ok

    % Determine if an exam name was specified
    hs     = guihandles(h);
    str{2} = get(hs.edit_exam_name,'String');
    if isempty(str{2})
        errordlg('Please specifiy a name for the new exam.',...
                                               'Need exam name...','modal');
        return
    end
    str([3 1]) = getPopupMenu([hs.popupmenu_examType hs.popupmenu_load_method]);

    % Determine if import was selected
    if ~isempty( strfind(str{3},'Import') )
        str{3} = 'import';
    end

    % Clean up strings
    str([1 3]) = strrep( strrep(str([3 1]),' ',''), '-','' );
    str{1}     = lower(str{1});

    % Store output and resume execution
    setappdata(h,'output',str);
    uiresume(hs.figure_main);

end %accept